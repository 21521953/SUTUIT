<h3 class="assistance-heading">Finding Assistant</h3>
<div class="message-wrap">
    <div class="reopen">
         <svg class="re-window" stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="icon-sm" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="3" x2="9" y2="21"></line></svg>
    </div>
   
    <div class="history-wrapper">
        <div class="back-button back-history">
            <a href="/?q=1" class="return"><i class="fa fa-plus icon"></i>New Chat</a>
            <svg class="window" stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="icon-sm" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="3" x2="9" y2="21"></line></svg>
        </div>
    </div>
    <div class="chat-container">
        <div class="chat-wrapper">
            {{!-- <div class="container-guest">
                <img class="chat-img" src="/img/images.png" alt="">
                <div class="chat-box">aaa</div>
            </div>  --}}
        </div>
        <form id="form" action="">
        <div class="text-input">
            <input autocomplete="off" id="input" class="input" type="text" placeholder="Start a message....">
            <div class="sending">
                <i class="fa fa-send"></i>
            </div>
        </div>
        </form>
    </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function() {
    var socket = io ();
   // const socket = io ("http://localhost:3000/chat");
    const reopen = document.querySelector('.reopen');
    const close = document.querySelector('.window');
    const history = document.querySelector('.history-wrapper');
    const form = document.getElementById('form');
    const input = document.getElementById('input');
    var chatContainer = document.querySelector('.chat-wrapper');

    close.addEventListener('click', () => {
        history.classList.add('hide');
        reopen.style.display = 'block';
    })
    reopen.addEventListener('click', () => {
        history.classList.remove('hide');
        reopen.style.display ='none';
    })

    //input message
    form.addEventListener('submit', (e) => {
        e.preventDefault();
        if(input.value) {
            socket.emit('Chat message' , input.value);
            console.log(input.value)
            input.value ='';
        }
    });

    socket.on('Chat message' , function(msg) {
        var container = document.createElement('div');
        var item = document.createElement('div');
            container.setAttribute('class', 'container-host')
            item.setAttribute('id', 'message');
            item.setAttribute('class', 'chat-box');
            item.textContent = msg;
       // console.log(item)
        container.appendChild(item);
        chatContainer.appendChild(container);
    } )

    socket.on('chat message server' , function(msg) {
        var containerser = document.createElement('div');
        var itemser = document.createElement('div');
            containerser.setAttribute('class', 'container-guest')
            itemser.setAttribute('id', 'message');
            itemser.setAttribute('class', 'chat-box');
            itemser.textContent = msg;
       // console.log(item)
        containerser.appendChild(item);
        chatContainer.appendChild(containerser);
    } ) 
});//end
</script>